generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // or your preferred database
  url      = env("DATABASE_URL")
}

model User {
  id                Int             @id @default(autoincrement())
  name              String          @unique
  password          String          // Encrypted password
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model Session {
  id                Int             @id @default(autoincrement())
  phoneNumber       String          @unique // Phone number associated with the session
  password          String          // Password for the session
  sessionData       String          // Serialized Telegram session data
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  // Relation to ChatSettings
  chatSettings      ChatSettings[]
}

model BotPreferences {
  id                Int             @id @default(autoincrement())
  isOn              Boolean         @default(true)   // Global bot on/off toggle
  generalPrompt     String          @default("")     // Default prompt for the bot
  responseDelay     Int             @default(5000)   // Default delay before responding

  // New fields for OpenAI settings
  openAiMaxTokens   Int             @default(100)    // Maximum tokens for OpenAI responses
  openAiTemperature Float           @default(0.7)    // Temperature for OpenAI responses

  analyzeImages      Boolean  @default(false) // Flag to enable/disable image analysis
  analyzeVoices      Boolean  @default(false) // Flag to enable/disable audio analysis

  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model ChatSettings {
  id                Int             @id @default(autoincrement())
  chatId            String          // Chat ID from Telegram or another source
  botPreferencesId  Int?            // Reference to the BotPreferences model (optional)
  customPrompt      String?         // Custom prompt for this chat (overrides general prompt)
  isAutoReplyOn     Boolean         @default(false)   // Auto-reply toggle
  responseDelay     Int?            // Custom response delay
  sessionId         Int             // Foreign key to Session
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  // Relations
  session           Session         @relation(fields: [sessionId], references: [id])

  // Composite unique constraint
  @@unique([chatId, sessionId])
}

model Analytics {
  id                Int      @id @default(autoincrement())
  chatId            String   // ID of the specific chat (linked to ChatSettings)
  messageId         String   // Unique message ID
  userMessage       String?  // Message text received from the user
  botResponse       String?  // Message text sent by the bot
  messageReceivedAt DateTime // Timestamp when the message was received
  responseSentAt    DateTime? // Timestamp when the response was sent (null if no response)
  responseTime      Int?     // Response time in milliseconds (null if no response)
  createdAt         DateTime @default(now())

  // Additional indexes for fast analytics queries
  @@index([chatId, messageReceivedAt])
  @@index([messageReceivedAt])
}
